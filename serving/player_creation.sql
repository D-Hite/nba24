CREATE OR REPLACE TABLE PLAYER_10_AVG_TABLE AS
    with INTERMEDIATE_DATA as (
        SELECT
        TEAM_ABBREVIATION
        ,PLAYER_NAME
        ,SEASON_ID
        ,GAME_ID
        ,GAME_DATE
        ,MATCHUP,CASE WHEN MIN IS NULL THEN 0
    else CAST(SPLIT_PART(MIN, ':', 1) as DOUBLE) + (CAST(SPLIT_PART(MIN, ':', 2) as DOUBLE)) / 60
    end as converted_minutes
	,AVG(converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_minutes
	,EFG_PCT
	,FTA_RATE
	,TM_TOV_PCT
	,OREB_PCT
	,OPP_EFG_PCT
	,OPP_FTA_RATE
	,OPP_TOV_PCT
	,OPP_OREB_PCT
	,AVG(COALESCE(EFG_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_EFG_PCT
	,AVG(COALESCE(FTA_RATE,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_FTA_RATE
	,AVG(COALESCE(TM_TOV_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_TM_TOV_PCT
	,AVG(COALESCE(OREB_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_OREB_PCT
	,AVG(COALESCE(OPP_EFG_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_OPP_EFG_PCT
	,AVG(COALESCE(OPP_FTA_RATE,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_OPP_FTA_RATE
	,AVG(COALESCE(OPP_TOV_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_OPP_TOV_PCT
	,AVG(COALESCE(OPP_OREB_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_OPP_OREB_PCT,COUNT(*) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID
        ORDER BY GAME_DATE
        ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
    ) AS GAME_COUNT
    

    FROM PLAYERS_COMBINED
    )

    SELECT 
    TEAM_ABBREVIATION
    ,PLAYER_NAME
    ,SEASON_ID
    ,GAME_ID
    ,GAME_DATE
    ,MATCHUP
	,rolling_10_avg_minutes as MINUTES
	,rolling_10_avg_EFG_PCT as EFG_PCT
	,rolling_10_avg_FTA_RATE as FTA_RATE
	,rolling_10_avg_TM_TOV_PCT as TM_TOV_PCT
	,rolling_10_avg_OREB_PCT as OREB_PCT
	,rolling_10_avg_OPP_EFG_PCT as OPP_EFG_PCT
	,rolling_10_avg_OPP_FTA_RATE as OPP_FTA_RATE
	,rolling_10_avg_OPP_TOV_PCT as OPP_TOV_PCT
	,rolling_10_avg_OPP_OREB_PCT as OPP_OREB_PCT
    ,GAME_COUNT
    FROM INTERMEDIATE_DATA
    --WHERE SEASON_ID::varchar not like '4%'
    ORDER BY SEASON_ID, TEAM_ABBREVIATION, GAME_DATECREATE OR REPLACE TABLE PLAYER_10_PER_MIN_AVG_DATA AS
    with INTERMEDIATE_DATA as (
        SELECT
        TEAM_ABBREVIATION
        ,PLAYER_NAME
        ,SEASON_ID
        ,GAME_ID
        ,GAME_DATE
        ,MATCHUP,CASE WHEN MIN IS NULL THEN 0
    else CAST(SPLIT_PART(MIN, ':', 1) as DOUBLE) + (CAST(SPLIT_PART(MIN, ':', 2) as DOUBLE)) / 60
    end as converted_minutes
	,AVG(converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS rolling_10_avg_minutes
	,PACE
	,FG_PCT
	,FT_PCT
	,PLUS_MINUS
	,AVG(COALESCE("PTS",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_PTS_per_minute
	,AVG(COALESCE("REB",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_REB_per_minute
	,AVG(COALESCE("AST",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_AST_per_minute
	,AVG(COALESCE("STL",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_STL_per_minute
	,AVG(COALESCE("BLK",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_BLK_per_minute
	,AVG(COALESCE("TO",0) / converted_minutes) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_TO_per_minute
	,AVG(COALESCE(PACE,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_PACE
	,AVG(COALESCE(FG_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_FG_PCT
	,AVG(COALESCE(FT_PCT,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_FT_PCT
	,AVG(COALESCE(PLUS_MINUS,0)) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID 
        ORDER BY GAME_DATE
        ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING
    ) AS avg_10_PLUS_MINUS,COUNT(*) OVER (
        PARTITION BY PLAYER_NAME, SEASON_ID
        ORDER BY GAME_DATE
        ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
    ) AS GAME_COUNT
    

    FROM PLAYERS_COMBINED
    )

    SELECT 
    TEAM_ABBREVIATION
    ,PLAYER_NAME
    ,SEASON_ID
    ,GAME_ID
    ,GAME_DATE
    ,MATCHUP
	,rolling_10_avg_minutes as MINUTES
	,round(avg_10_PTS_per_minute,3) as AVG_PTS_PM
	,round(avg_10_REB_per_minute,3) as AVG_REB_PM
	,round(avg_10_AST_per_minute,3) as AVG_AST_PM
	,round(avg_10_STL_per_minute,3) as AVG_STL_PM
	,round(avg_10_BLK_per_minute,3) as AVG_BLK_PM
	,round(avg_10_TO_per_minute,3) as AVG_TO_PM
	,round(avg_10_PACE,3) as AVG_PACE
	,round(avg_10_FG_PCT,3) as AVG_FG_PCT
	,round(avg_10_FT_PCT,3) as AVG_FT_PCT
	,round(avg_10_PLUS_MINUS,3) as AVG_PLUS_MINUS
    ,GAME_COUNT
    FROM INTERMEDIATE_DATA
    --WHERE SEASON_ID::varchar not like '4%'
    ORDER BY SEASON_ID, TEAM_ABBREVIATION, GAME_DATE